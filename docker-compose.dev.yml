version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_local
    environment:
      POSTGRES_DB: ${DB_NAME:-myapp_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    container_name: redis_queue
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  fastapi_app:
    build:
      context: ./src
    env_file:
      - .env
    container_name: fastapi_app_local
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./src:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network

  rq_worker:
    build:
      context: ./worker
    container_name: rq_worker
    command: python -m worker
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
